/* Generated By:JavaCC: Do not edit this line. MoolMinusParserConstants.java */
package parser;


/**
 * Token literal values and constants.
 * Generated by org.javacc.parser.OtherFilesGen#start()
 */
public interface MoolMinusParserConstants {

  /** End of File. */
  int EOF = 0;
  /** RegularExpression Id. */
  int CLASS = 5;
  /** RegularExpression Id. */
  int UNRESTRICTED = 6;
  /** RegularExpression Id. */
  int LBRACKET = 7;
  /** RegularExpression Id. */
  int RBRACKET = 8;
  /** RegularExpression Id. */
  int LPAR = 9;
  /** RegularExpression Id. */
  int RPAR = 10;
  /** RegularExpression Id. */
  int INV = 11;
  /** RegularExpression Id. */
  int INIT = 12;
  /** RegularExpression Id. */
  int REQ = 13;
  /** RegularExpression Id. */
  int ENS = 14;
  /** RegularExpression Id. */
  int SYNC = 15;
  /** RegularExpression Id. */
  int NEW = 16;
  /** RegularExpression Id. */
  int VOID_TYPE = 17;
  /** RegularExpression Id. */
  int INTEGER_TYPE = 18;
  /** RegularExpression Id. */
  int BOOLEAN_TYPE = 19;
  /** RegularExpression Id. */
  int STRING_TYPE = 20;
  /** RegularExpression Id. */
  int TRUE = 21;
  /** RegularExpression Id. */
  int FALSE = 22;
  /** RegularExpression Id. */
  int NULL = 23;
  /** RegularExpression Id. */
  int THIS = 24;
  /** RegularExpression Id. */
  int UNIT = 25;
  /** RegularExpression Id. */
  int IF = 26;
  /** RegularExpression Id. */
  int ELSE = 27;
  /** RegularExpression Id. */
  int PRINTSTR = 28;
  /** RegularExpression Id. */
  int PRINTINT = 29;
  /** RegularExpression Id. */
  int SPAWN = 30;
  /** RegularExpression Id. */
  int ID = 31;
  /** RegularExpression Id. */
  int STRING = 32;
  /** RegularExpression Id. */
  int INTEGER = 33;
  /** RegularExpression Id. */
  int OR = 34;
  /** RegularExpression Id. */
  int AND = 35;
  /** RegularExpression Id. */
  int NOT = 36;
  /** RegularExpression Id. */
  int IMPLIES = 37;
  /** RegularExpression Id. */
  int EQUAL = 38;
  /** RegularExpression Id. */
  int DIFF = 39;
  /** RegularExpression Id. */
  int GREATER = 40;
  /** RegularExpression Id. */
  int LESS = 41;
  /** RegularExpression Id. */
  int GREATER_OR_EQUAL = 42;
  /** RegularExpression Id. */
  int LESS_OR_EQUAL = 43;
  /** RegularExpression Id. */
  int DOT = 44;
  /** RegularExpression Id. */
  int ASSIGN = 45;
  /** RegularExpression Id. */
  int PLUS = 46;
  /** RegularExpression Id. */
  int MINUS = 47;
  /** RegularExpression Id. */
  int MULT = 48;
  /** RegularExpression Id. */
  int DIV = 49;
  /** RegularExpression Id. */
  int CONCAT = 50;
  /** RegularExpression Id. */
  int COMMA = 51;
  /** RegularExpression Id. */
  int L = 52;

  /** Lexical state. */
  int DEFAULT = 0;

  /** Literal token values. */
  String[] tokenImage = {
    "<EOF>",
    "\" \"",
    "\"\\t\"",
    "\"\\r\"",
    "\"\\n\"",
    "\"class\"",
    "\"unrestricted\"",
    "\"{\"",
    "\"}\"",
    "\"(\"",
    "\")\"",
    "\"//@ invariant \"",
    "\"//@ initial \"",
    "\"//@ requires \"",
    "\"//@ ensures \"",
    "\"sync\"",
    "\"new\"",
    "\"void\"",
    "\"int\"",
    "\"boolean\"",
    "\"string\"",
    "\"true\"",
    "\"false\"",
    "\"null\"",
    "\"this\"",
    "\"unit\"",
    "\"if\"",
    "\"else\"",
    "\"printStr\"",
    "\"printInt\"",
    "\"spawn\"",
    "<ID>",
    "<STRING>",
    "<INTEGER>",
    "\"||\"",
    "\"&&\"",
    "\"!\"",
    "\"->\"",
    "\"==\"",
    "\"!=\"",
    "\">\"",
    "\"<\"",
    "\">=\"",
    "\"<=\"",
    "\".\"",
    "\"=\"",
    "\"+\"",
    "\"-\"",
    "\"*\"",
    "\"/\"",
    "\"++\"",
    "\",\"",
    "\";\"",
  };

}
